/*****
This code is built around an api with the same scheme as the merchant time frequency data. 
This currently doesn't exist except in static form

With the current api, one would have to have to add code to arrange the data from the api to be
organized in the same scheme as the merchant time frequency data.

EX:

TIME DATA
"oneWeek":[{"id":164},{"id":176},{"id":213},{"id":221},{"id":290}]
"threeMonths":[{"id":16},{"id":159},{"id":160}]

CURRENT COIN DATA
[{"id":1153,"currency":"ZEN"},{"id":16,"currency":"ZEN"},{"id":1527,"currency":"DASH"}]

DESIRED COIN DATA
"BCH":[{"id":164},{"id":176},{"id":213},{"id":221},{"id":290}]
"DASH":[{"id":164},{"id":176},{"id":213},{"id":290}]

*****/

/*
This section creates a key value pair of an id and true for each id listed under each coin
This section should be placed where the time frequency categories are defined
*/
            let btcMerchants = resp.btc.reduce((map, i) => {
              map[i.id] = true;
              return map;
            }, {});
            let dashMerchants = resp.dash.reduce((map, i) => {
              map[i.id] = true;
              return map;
            }, {});
            let bchMerchants = resp.bch.reduce((map, i) => {
              map[i.id] = true;
              return map;
            }, {});
            let ltcMerchants = resp.ltc.reduce((map, i) => {
              map[i.id] = true;
              return map;
            }, {});
            let zecMerchants = resp.zec.reduce((map, i) => {
              map[i.id] = true;
              return map;
            }, {});
            let xrpMerchants = resp.xrp.reduce((map, i) => {
              map[i.id] = true;
              return map;
            }, {});
            let zenMerchants = resp.zen.reduce((map, i) => {
              map[i.id] = true;
              return map;
            }, {});
   
   
 /*
This section creates a coin array for each merchant and fills it with a coin if the id of 
the merchant matches with an id from the list of ids stored under each coin

This section should be placed where the frequency marker icons are assigned to merchants 
*/
   
              let coin= [];
              console.log(dashMerchants)

              if (btcMerchants[merchant.id]) {
                coin.push(" BTC")
              }
              if (dashMerchants[merchant.id]) {
                coin.push(" DASH")
              }
              if (bchMerchants[merchant.id]) {
                coin.push(" BCH")
              }
              if (ltcMerchants[merchant.id]) {
                coin.push(" LTC")
              }
              if (zecMerchants[merchant.id]) {
                coin.push(" ZEC")
              }
              if (xrpMerchants[merchant.id]) {
                coin.push(" XRP")
              }
              if (zenMerchants[merchant.id]) {
                coin.push(" ZEN")
              }
              console.log(coin)


/*
This is the content string. The "coins accepted" text is not stylized, but would look fitting with an h2
*/

content: `<h1>${merchant.business_name}</h1> <h2>${merchant.physical_address}</h2> <div style='position:relative'><img src='${merchant.image_url}' style='width: 100%; height: 100%'></div> Coins accepted:${coin}`
              });





      
